Let's Go!
http://301.sh/lets-go-workshop
18:00 11 Apr 2017
Tags: Go, programming, tutorial

Michael Hausenblas
Developer Advocate, Red Hat
http://mhausenblas.info
@mhausenblas

* Agenda

- Why Go?
- Walkthrough
- Advanced stuff

* Why Go?


* Why Go?

.background img/gopher_head.png

- History
- Language features
- Community
- Tooling

* History

.code snippets/design_notes

[[https://talks.golang.org/2015/gophercon-goevolution.slide][More …]]

* History

.image img/influences.png 500 _

* Language features

* Language features

- Statically typed, compiled
- Native binaries (Linux, macOS, Windows)
- Garbage collected
- Comprehensive standard lib
- Concurrency a 1st-class citizen
- No magic

* Community

* Discussions

.background img/community.png

When you need help, want to ask or discuss something …

.link https://groups.google.com/forum/#!forum/golang-nuts golang-nuts@googlegroups.com
.link https://invite.slack.golangbridge.org/ gophers.slack.com
.link https://www.reddit.com/r/golang/ /r/golang on Reddit
.link http://stackoverflow.com/questions/tagged/go #go on StackOverflow

* News

.background img/community.png

When you want to learn about new developments, exchange thoughts and meet other Gophers …

.link https://www.youtube.com/user/gocoding Go channel on YouTube
.link https://www.gophercon.com/ gophercon.com
.link https://www.dotgo.eu/ dotgo.eu
.link https://golangweekly.com/ golangweekly.com


* Tooling

* Tooling

From build to test:

      build       compile packages and dependencies
      clean       remove object files
      doc         show documentation for package or symbol
      env         print Go environment information
      bug         start a bug report
      fix         run go tool fix on packages
      fmt         run gofmt on package sources
      generate    generate Go files by processing source
      get         download and install packages and dependencies
      install     compile and install packages and dependencies
      list        list packages
      run         compile and run Go program
      test        test packages
      tool        run specified go tool
      version     print Go version
      vet         run go tool vet on packages

* Walkthrough

* Follow along

Online: no set up required but limited

Local:

  $ git clone https://github.com/mhausenblas/letsgo && cd letsgo
  $ go run snippets/sXX/main.go

_Note_: examples that may only work in local mode are marked with *

* Hello World!

.play -numbers snippets/s00/main.go

* A more realistic Hello World!*

.play -numbers snippets/s01/main.go

* Iterations and collections

.play -numbers snippets/s02/main.go

* Other

- Struct types
- Functions and methods
- Error handling
- Reading and writing files
- HTTP service/JSON
- Concurrency


* Advanced stuff

* Development

editor, IDE, containerize

* Useful packages
Sirupsen/logrus, Cobra/Viper

* Case studies

- Docker
- Kubernetes
- etcd

* Best practices

- [[https://golang.org/doc/effective_go.html][Effective Go]]
- [[https://www.youtube.com/watch?v=PAAkCSZUG1c][Go Proverbs]]
- [[https://www.youtube.com/watch?v=29LLRKIL_TI][7 common mistakes in Go and when to avoid them]]

* Criticism

- [[https://github.com/ksimka/go-is-not-good][ksimka/go-is-not-good]]
- [[https://www.youtube.com/watch?v=gHCtEjzZ-rY][A Look at the Criticism of Go]]
